/**
 */
package org.eclipse.gemoc.executionframework.value.model.value.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.eclipse.gemoc.executionframework.value.model.value.util.ValueAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ValueItemProviderAdapterFactory extends ValueAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ValueItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.BooleanAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanAttributeValueItemProvider booleanAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.BooleanAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanAttributeValueAdapter() {
		if (booleanAttributeValueItemProvider == null) {
			booleanAttributeValueItemProvider = new BooleanAttributeValueItemProvider(this);
		}

		return booleanAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.BooleanObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanObjectAttributeValueItemProvider booleanObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.BooleanObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanObjectAttributeValueAdapter() {
		if (booleanObjectAttributeValueItemProvider == null) {
			booleanObjectAttributeValueItemProvider = new BooleanObjectAttributeValueItemProvider(this);
		}

		return booleanObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.IntegerAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerAttributeValueItemProvider integerAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.IntegerAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerAttributeValueAdapter() {
		if (integerAttributeValueItemProvider == null) {
			integerAttributeValueItemProvider = new IntegerAttributeValueItemProvider(this);
		}

		return integerAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.IntegerObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerObjectAttributeValueItemProvider integerObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.IntegerObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerObjectAttributeValueAdapter() {
		if (integerObjectAttributeValueItemProvider == null) {
			integerObjectAttributeValueItemProvider = new IntegerObjectAttributeValueItemProvider(this);
		}

		return integerObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.LongAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LongAttributeValueItemProvider longAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.LongAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLongAttributeValueAdapter() {
		if (longAttributeValueItemProvider == null) {
			longAttributeValueItemProvider = new LongAttributeValueItemProvider(this);
		}

		return longAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.LongObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LongObjectAttributeValueItemProvider longObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.LongObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLongObjectAttributeValueAdapter() {
		if (longObjectAttributeValueItemProvider == null) {
			longObjectAttributeValueItemProvider = new LongObjectAttributeValueItemProvider(this);
		}

		return longObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.FloatAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatAttributeValueItemProvider floatAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.FloatAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatAttributeValueAdapter() {
		if (floatAttributeValueItemProvider == null) {
			floatAttributeValueItemProvider = new FloatAttributeValueItemProvider(this);
		}

		return floatAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.FloatObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatObjectAttributeValueItemProvider floatObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.FloatObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatObjectAttributeValueAdapter() {
		if (floatObjectAttributeValueItemProvider == null) {
			floatObjectAttributeValueItemProvider = new FloatObjectAttributeValueItemProvider(this);
		}

		return floatObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.StringAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringAttributeValueItemProvider stringAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.StringAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringAttributeValueAdapter() {
		if (stringAttributeValueItemProvider == null) {
			stringAttributeValueItemProvider = new StringAttributeValueItemProvider(this);
		}

		return stringAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyBooleanAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyBooleanAttributeValueItemProvider manyBooleanAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyBooleanAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyBooleanAttributeValueAdapter() {
		if (manyBooleanAttributeValueItemProvider == null) {
			manyBooleanAttributeValueItemProvider = new ManyBooleanAttributeValueItemProvider(this);
		}

		return manyBooleanAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyBooleanObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyBooleanObjectAttributeValueItemProvider manyBooleanObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyBooleanObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyBooleanObjectAttributeValueAdapter() {
		if (manyBooleanObjectAttributeValueItemProvider == null) {
			manyBooleanObjectAttributeValueItemProvider = new ManyBooleanObjectAttributeValueItemProvider(this);
		}

		return manyBooleanObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyIntegerAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyIntegerAttributeValueItemProvider manyIntegerAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyIntegerAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyIntegerAttributeValueAdapter() {
		if (manyIntegerAttributeValueItemProvider == null) {
			manyIntegerAttributeValueItemProvider = new ManyIntegerAttributeValueItemProvider(this);
		}

		return manyIntegerAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyIntegerObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyIntegerObjectAttributeValueItemProvider manyIntegerObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyIntegerObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyIntegerObjectAttributeValueAdapter() {
		if (manyIntegerObjectAttributeValueItemProvider == null) {
			manyIntegerObjectAttributeValueItemProvider = new ManyIntegerObjectAttributeValueItemProvider(this);
		}

		return manyIntegerObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyLongAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyLongAttributeValueItemProvider manyLongAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyLongAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyLongAttributeValueAdapter() {
		if (manyLongAttributeValueItemProvider == null) {
			manyLongAttributeValueItemProvider = new ManyLongAttributeValueItemProvider(this);
		}

		return manyLongAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyLongObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyLongObjectAttributeValueItemProvider manyLongObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyLongObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyLongObjectAttributeValueAdapter() {
		if (manyLongObjectAttributeValueItemProvider == null) {
			manyLongObjectAttributeValueItemProvider = new ManyLongObjectAttributeValueItemProvider(this);
		}

		return manyLongObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyFloatAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyFloatAttributeValueItemProvider manyFloatAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyFloatAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyFloatAttributeValueAdapter() {
		if (manyFloatAttributeValueItemProvider == null) {
			manyFloatAttributeValueItemProvider = new ManyFloatAttributeValueItemProvider(this);
		}

		return manyFloatAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyFloatObjectAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyFloatObjectAttributeValueItemProvider manyFloatObjectAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyFloatObjectAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyFloatObjectAttributeValueAdapter() {
		if (manyFloatObjectAttributeValueItemProvider == null) {
			manyFloatObjectAttributeValueItemProvider = new ManyFloatObjectAttributeValueItemProvider(this);
		}

		return manyFloatObjectAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyStringAttributeValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyStringAttributeValueItemProvider manyStringAttributeValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyStringAttributeValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyStringAttributeValueAdapter() {
		if (manyStringAttributeValueItemProvider == null) {
			manyStringAttributeValueItemProvider = new ManyStringAttributeValueItemProvider(this);
		}

		return manyStringAttributeValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.SingleReferenceValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleReferenceValueItemProvider singleReferenceValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.SingleReferenceValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingleReferenceValueAdapter() {
		if (singleReferenceValueItemProvider == null) {
			singleReferenceValueItemProvider = new SingleReferenceValueItemProvider(this);
		}

		return singleReferenceValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyReferenceValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyReferenceValueItemProvider manyReferenceValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyReferenceValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyReferenceValueAdapter() {
		if (manyReferenceValueItemProvider == null) {
			manyReferenceValueItemProvider = new ManyReferenceValueItemProvider(this);
		}

		return manyReferenceValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.SingleObjectValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SingleObjectValueItemProvider singleObjectValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.SingleObjectValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSingleObjectValueAdapter() {
		if (singleObjectValueItemProvider == null) {
			singleObjectValueItemProvider = new SingleObjectValueItemProvider(this);
		}

		return singleObjectValueItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.eclipse.gemoc.executionframework.value.model.value.ManyObjectValue} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ManyObjectValueItemProvider manyObjectValueItemProvider;

	/**
	 * This creates an adapter for a {@link org.eclipse.gemoc.executionframework.value.model.value.ManyObjectValue}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createManyObjectValueAdapter() {
		if (manyObjectValueItemProvider == null) {
			manyObjectValueItemProvider = new ManyObjectValueItemProvider(this);
		}

		return manyObjectValueItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (booleanAttributeValueItemProvider != null) booleanAttributeValueItemProvider.dispose();
		if (booleanObjectAttributeValueItemProvider != null) booleanObjectAttributeValueItemProvider.dispose();
		if (integerAttributeValueItemProvider != null) integerAttributeValueItemProvider.dispose();
		if (integerObjectAttributeValueItemProvider != null) integerObjectAttributeValueItemProvider.dispose();
		if (longAttributeValueItemProvider != null) longAttributeValueItemProvider.dispose();
		if (longObjectAttributeValueItemProvider != null) longObjectAttributeValueItemProvider.dispose();
		if (floatAttributeValueItemProvider != null) floatAttributeValueItemProvider.dispose();
		if (floatObjectAttributeValueItemProvider != null) floatObjectAttributeValueItemProvider.dispose();
		if (stringAttributeValueItemProvider != null) stringAttributeValueItemProvider.dispose();
		if (manyBooleanAttributeValueItemProvider != null) manyBooleanAttributeValueItemProvider.dispose();
		if (manyBooleanObjectAttributeValueItemProvider != null) manyBooleanObjectAttributeValueItemProvider.dispose();
		if (manyIntegerAttributeValueItemProvider != null) manyIntegerAttributeValueItemProvider.dispose();
		if (manyIntegerObjectAttributeValueItemProvider != null) manyIntegerObjectAttributeValueItemProvider.dispose();
		if (manyLongAttributeValueItemProvider != null) manyLongAttributeValueItemProvider.dispose();
		if (manyLongObjectAttributeValueItemProvider != null) manyLongObjectAttributeValueItemProvider.dispose();
		if (manyFloatAttributeValueItemProvider != null) manyFloatAttributeValueItemProvider.dispose();
		if (manyFloatObjectAttributeValueItemProvider != null) manyFloatObjectAttributeValueItemProvider.dispose();
		if (manyStringAttributeValueItemProvider != null) manyStringAttributeValueItemProvider.dispose();
		if (singleReferenceValueItemProvider != null) singleReferenceValueItemProvider.dispose();
		if (manyReferenceValueItemProvider != null) manyReferenceValueItemProvider.dispose();
		if (singleObjectValueItemProvider != null) singleObjectValueItemProvider.dispose();
		if (manyObjectValueItemProvider != null) manyObjectValueItemProvider.dispose();
	}

}
