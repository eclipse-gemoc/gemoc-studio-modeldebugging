@startuml
' GENERATED FILE, DO NOT MODIFY MANUALLY
left to right direction

package EngineAddonProtocol_API {
package data {
package messageClasses {
class EngineAboutToStartEventArguments  {
}
class EngineStartedEventArguments  {
}
class EngineInitializedEventArguments  {
}
class EngineAboutToStopEventArguments  {
}
class EngineStoppedEventArguments  {
}
class EngineAboutToDisposeEventArguments  {
}
class AboutToExecuteStepEventArguments  {
}
class StepExecutedEventArguments  {
}
class InitializeArguments  {
	String engineIdRegExp
}
class InitializeResponse  {
}
class GetStateArguments  {
	String stateId
}
class GetStateResponse  {
}
class GetStepArguments  {
	String stateId
}
class GetStepResponse  {
}
class Message  {
	Integer id
	String format
	Map<String, String> variables
	boolean sendTelemetry
	boolean showUser
	String url
	String urlLabel
}
}
package dtoClasses {
class ExecutionEngineDto  {
	String engineKindName
	String engineName
}
class StepDto  {
	String startingStateID
	String endingStateID
}
class MSEOccurenceDto  {
	String parameters
	String result
}
class MSEDto  {
	String callerEObjectURI
	String actionID
}
class StateDto  {
	String[] startedStepsID
	String[] endedStepsID
}
class StateValueDto  {
}
}
}
EngineAboutToStartEventArguments *-- ExecutionEngineDto :  engine
EngineStartedEventArguments *-- ExecutionEngineDto :  engine
EngineInitializedEventArguments *-- ExecutionEngineDto :  engine
EngineAboutToStopEventArguments *-- ExecutionEngineDto :  engine
EngineStoppedEventArguments *-- ExecutionEngineDto :  engine
EngineAboutToDisposeEventArguments *-- ExecutionEngineDto :  engine
AboutToExecuteStepEventArguments *-- ExecutionEngineDto :  engine
AboutToExecuteStepEventArguments *-- StepDto :  stepToExecute
StepExecutedEventArguments *-- ExecutionEngineDto :  engine
StepExecutedEventArguments *-- StepDto :  stepToExecute
GetStateResponse *-- StateDto :  state
GetStepResponse *-- StepDto :  step
StepDto *-- MSEOccurenceDto :  mseOccurence
MSEOccurenceDto *-- MSEDto :  mse
StateDto *-- "*" StateValueDto :  changedValues
EngineAboutToStartEventArguments -[hidden]- dtoClasses
EngineStartedEventArguments -[hidden]- dtoClasses
EngineInitializedEventArguments -[hidden]- dtoClasses
EngineAboutToStopEventArguments -[hidden]- dtoClasses
EngineStoppedEventArguments -[hidden]- dtoClasses
EngineAboutToDisposeEventArguments -[hidden]- dtoClasses
AboutToExecuteStepEventArguments -[hidden]- dtoClasses
StepExecutedEventArguments -[hidden]- dtoClasses
InitializeArguments -[hidden]- dtoClasses
InitializeResponse -[hidden]- dtoClasses
GetStateArguments -[hidden]- dtoClasses
GetStateResponse -[hidden]- dtoClasses
GetStepArguments -[hidden]- dtoClasses
GetStepResponse -[hidden]- dtoClasses
Message -[hidden]- dtoClasses
package services {
class EngineAddonProtocolServer {
	InitializeResponse initialize(InitializeArguments arguments)
	GetStateResponse getState(GetStateArguments arguments)
	GetStepResponse getStep(GetStepArguments arguments)
}
class EngineAddonProtocolClient {
	@JsonNotification| void engineAboutToStart(EngineAboutToStartEventArguments args)
	@JsonNotification| void engineStarted(EngineStartedEventArguments args)
	@JsonNotification| void engineInitialized(EngineInitializedEventArguments args)
	@JsonNotification| void engineAboutToStop(EngineAboutToStopEventArguments args)
	@JsonNotification| void engineStopped(EngineStoppedEventArguments args)
	@JsonNotification| void engineAboutToDispose(EngineAboutToDisposeEventArguments args)
	@JsonNotification| void aboutToExecuteStep(AboutToExecuteStepEventArguments args)
	@JsonNotification| void stepExecuted(StepExecutedEventArguments args)
}
}
}
@enduml

